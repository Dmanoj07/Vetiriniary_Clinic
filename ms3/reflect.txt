/*
*****************************************************************************
                        Assignment 1 - Milestone 3
Full Name  :Manoj Dhami
Student ID#:121613202
Email      :mdhami7@myseneca.ca
Section    :NDD
Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************
*/

1. This milestone required you to create additional functions that were not specified or provided for you. Briefly describe three functions you created and include the purpose and value those functions contributed towards the application. Organize your answer for each function by first including the function prototype (not the definition) followed by your explanation. (Minimum: 200 words) 


Ans: In this milestone, the three additional functions that I created are,
1. void sortingAppointment(const struct ClinicData* data);
2. void sortingPatient(const struct ClinicData* data);
3. int inputDay(int month, int year);
        
First, sortingAppointment() function sorts all the appointment provided to it in ascending order. It sorts the appointment first by the value of year, if the value of year of two appointment  matches then we check for the month that have schedule for, if month also matches, we check for the day they have schedule and  if day also matches with other appointment then we check for the hour and minutes. This is done by running through two loops, the first loop will take the first value and the second will take the second value of an appointment. Every time we add or edit  an appointment we need to write the lengthy code which makes our code look ugly and also become difficult to find a bug, if there is error in this code. So with this function, we can sort our data any time by just passing it as a parameter. 


Second, sortingPatient() function, It takes the data as a parameter and sort them according to the appointment. It will look for the patient number of a sorted appointment list in its own data, which is a common entity in both file, and sort them accordingly. 


Last, inputDay() function, this function takes the values of month and year as a parameter and use that value in its range while asking for input to the user and returns the value of day. This function helps to know about the days in different month and in a leap year. 




2. The "addAppointment" function must perform many operations. How many lines of code did you use for this function? How many lines did you save by applying pattern recognition and the use of functions? Identify all the sections of logic you were able to consolidate into useful functions to help with readability and maintainability of the code. (Minimum: 200 words) 


Ans: For this function, I have written 76 lines of code. With the help of a function and pattern recognition that I created, I save up to 22 extra lines of code. While asking the user for the value of day they prefer in a month for their appointment, I call my function “InputDay” and check if the user has entered a valid day and that is within the range of days in that month.
For instance, If users want to schedule their appointment in the year 2024 and in the month of February, then this function provides the range for the value of day to be entered and which will be 1-29 as it is a leap year. It will ask for the valid day until the user enters the right value and return the value from where it had been called.
 
 
After recognizing the pattern of an hour and minute asked for various times, I put them inside a do-while loop until it matches the condition of the appointment. When the function is done with the inputs, it checks the new appointment date and time in the previous record and if it is
 there, It will generate an error message, or else it will add the new appointment in the records.




3. This milestone demanded a concerted effort in time management to insure you could complete the work on-time. Breakdown how you spent your week of development and include each function/section of logic you worked on, describing the overall success/challenges you had along the way. (Minimum: 200 words) 


Ans: On the first day of this milestone, I just read the instruction thoroughly and look at the output.txt file to figure out the assignment. Once I have done that, I didn’t look at it the next day. I started working on it after two days of the class. First, I copied my milestone 2 code into this and leave the space for these milestone functions and create some additional macros, and prototypes and complete the two patient and appointment importing functions. On the second day, I start working on the “viewingAllappointment” function and I spent continuous two days displaying the data in a sorted way. Then I start working on viewing some specific data, it was the easiest part and on the same day I start adding appointments in the record, it was also not that time-consuming, as I am already familiar with this function from the previous milestone. After completing this function, I leave the last function, “removingAppointment” for the next day. Removing the appointment did take some time as I was not focused and tried to remove the record from the file. I asked my classmate for help for this function and with their help, I finished the last function too.